if @saved
  page.remove "item-#{@item.id}-container"
  # For some reason, the code below works on the project and context pages, but 
  #  not on the todo/list page when the item being deleted has just been added
  # page.call "fadeAndRemoveItem", "item-#{@item.id}-container"
  if @item.done?
    # Don't try to insert contents into a non-existent container!
    unless @user.preferences["no_completed"].to_i == 0
      page.insert_html :top, "completed", :partial => 'todo/item', :locals => { :parent_container_type => "completed" }
      page.visual_effect :highlight, "item-#{@item.id}", {'startcolor' => "'#99ff99'"}
    end
    if @remaining_undone_in_context == 0
      page.visual_effect :fade, "c#{@item.context_id}", :duration => 0.4
    end
  else
    page.call "todoItems.ensureVisibleWithEffectAppear", "c#{@item.context_id}"
    page.insert_html :bottom, "c#{@item.context_id}", :partial => 'todo/item', :locals => { :parent_container_type => "context" }
    page.visual_effect :highlight, "item-#{@item.id}", {'startcolor' => "'#99ff99'"}
  end
  page.hide "status"
	page.replace_html "badge_count", @down_count
else
  page.replace_html "status", content_tag("div", content_tag("h2", "#{pluralize(@item.errors.count, "error")} prohibited this record from being saved") + content_tag("p", "There were problems with the following fields:") + content_tag("ul", @item.errors.each_full { |msg| content_tag("li", msg) }), "id" => "ErrorExplanation", "class" => "ErrorExplanation")  
end