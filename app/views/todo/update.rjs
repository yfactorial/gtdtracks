page.hide "info"
if @saved
  item_container_id = "item-#{@item.id}-container"
  if source_view_is_one_of [:todo, :context]
    if @item.context_id == @original_item_context_id
      page.replace item_container_id, :partial => 'todo/item', :locals => { :parent_container_type => "context" }
      page.visual_effect :highlight, item_container_id, :duration => 3
    else
      page[item_container_id].remove
      if (@remaining_undone_in_original_context == 0)
        source_view do |from|
           from.todo { page.visual_effect :fade, "c#{@original_item_context_id}", :duration => 0.4 }
           from.context { page.show "c#{@original_item_context_id}empty-nd" }
         end
      end
      page.call "todoItems.ensureVisibleWithEffectAppear", "c#{@item.context_id}"
      page.call "todoItems.expandNextActionListingByContext", "c#{@item.context_id}items", true
      page.insert_html :bottom, "c#{@item.context_id}items", :partial => 'todo/item', :locals => { :parent_container_type => "context" }
      page.delay(0.5) do
        page.call "todoItems.ensureContainerHeight", "c#{@original_item_context_id}items"
        page.call "todoItems.ensureContainerHeight", "c#{@item.context_id}items"
        page.visual_effect :highlight, item_container_id, :duration => 3
      end
    end
  elsif source_view_is :project
    if @item.project_id == @original_item_project_id
      page.replace item_container_id, :partial => 'todo/item', :locals => { :parent_container_type => "project" }
      page.visual_effect :highlight, item_container_id, :duration => 3
    else
      page[item_container_id].remove
      if (@remaining_undone_in_original_project == 0)
        page.show "p#{@original_item_project_id}empty-nd"
      end
    end
  else
    logger.error "unexpected source_view '#{params[:_source_view]}'"
  end
  
else
  page.replace_html "info", content_tag("div", content_tag("div", "#{pluralize(@item.errors.count, "error")} prohibited this record from being saved",  "id" => "warning", "class" => "warning") + content_tag("p", "There were problems with the following fields:") + content_tag("ul", @item.errors.each_full { |msg| content_tag("li", msg) }))
  page.visual_effect :appear, 'info', :duration => 0.5
end